swagger: "2.0"
info:
  description: "Backend REST API using Node, Express, Sequelize and MySql with Spotify API"
  version: "1.0.1"
  title: "ðŸŽ¹ UMG Spotify Track REST API ðŸŽ¹"
  
servers:
  - url: https://api.umg.codes/v1/api
    description: Optional server description, e.g. Main (production) server
  - url: https://api.umg.codes/v1/api
    description: Optional server description, e.g. Internal staging server for testing

schemes: 
  - https
  - http

host: 
  - api.umg.codes
 # - umg-mvp.herokuapp.com
 # - localhost:7001

basePath: "/v1/api/isrc"

paths:
  
  /artists:
    get:
      summary: "Search for artists by Spotify ID or query string"
      description: "Get one artist by Spotify ID or  Get all artist by name matching a query string \n\n `?search=` accepts a text string that will fuzzy match against artist names (Ex 'Daft' => 'Daft Punk', 'The' => 'The Beatles' and 'The White Stripes') \n `?id=` accepts the Spotify assigned ID of an artist (Ex '2cnMpRsOVqtPMfq7YiFE6K' => 'Van Halen')"
      produces:
        - "application/json"
      parameters:
        - in: query
          name: search
          schema: 
            type: string
            example: ""
            summary: ""
        - in: query
          name: id
          schema: 
            type: string
            example: "3yDIp0kaq9EFKe07X1X2rz"
            summary: ""

      responses:
        200:
          description: 200 Success
          schema:
            type: array
            items:
        500:
          description: 500 Internal Server Error
          schema:
            type: object
            items:
    
  /track/{isrcId}:
    get:
      summary: "Get track record"
      description: "Get a track record using ISRC code"
      produces:
        - "application/json"
      parameters:
        - in: path
          name: isrcId
          schema:
            type: string
            example: "USMTD1811184"
      responses:
        200:
          description: 200 Success
          schema:
            type: object
            items:
        500:
          description: 500 Internal Server Error
          schema:
            type: object
            items:
    post:
      summary: "Create track record"
      description: "Create a track record using ISRC code supplied as a request parameter \n (Ex try creating a record for one of these ISRC codes of Pink Floyd songs: `GBN9Y1600012`, `GBAYE7300322`,`GBAYE7300262`)"
      produces:
        - "application/json"
      parameters:
        - in: path
          name: isrcId
          schema:
            type: string
            example: "USQX91300108"
      responses:
        200:
          description: 200 Success
          schema:
            type: object
            items:
        500:
          description: 500 Internal Server Error
          schema:
            type: object
            items:
    